# -*- coding: utf-8 -*-
"""LVADSUSR120-SnehaO-lab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zBLCxEXNcTBBg4miYAY4kItIUPWu8ztO
"""

import pandas as pd
df = pd.read_csv('/content/social_network.csv')
df.columns

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import IsolationForest
import matplotlib.pyplot as plt
import seaborn as sns
print(df.isnull().sum())
outlier_model = IsolationForest(contamination=0.1, random_state=42)
outliers = outlier_model.fit_predict(df[['login_activity', 'posting_activity', 'social_connections']])
df['outlier'] = outliers
df.describe()
print(df.shape)
print(df.info())
print(df.describe())
df.hist(figsize=(10, 8))
plt.tight_layout()
plt.show()
sns.pairplot(df, diag_kind='kde')
plt.show()
plt.figure(figsize=(10, 8))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Heatmap')
plt.show()
label_encoder = LabelEncoder()
df['account_status'] = label_encoder.fit_transform(df['account_status'])
features = ['login_activity', 'posting_activity', 'social_connections']
X = df[features]
y = df['outlier']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = IsolationForest(n_estimators=100, contamination=0.1, max_features=3, max_samples=10000, random_state=42)
model.fit(X_train)
y_pred = model.predict(X_train)
df["anomaly_score"] = model.decision_function(X)
anomalies = df.loc[df["anomaly_score"] < 0]
plt.scatter(df["social_connections"], df["anomaly_score"], label="Not Anomaly")
plt.scatter(anomalies["social_connections"], anomalies["anomaly_score"], color="r", label="Anomaly")
plt.xlabel("Social Connections")
plt.ylabel("Anomaly Score")
plt.legend()
plt.show()